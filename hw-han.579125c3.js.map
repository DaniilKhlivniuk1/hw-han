{"mappings":"AAAA,MAAM;IACF,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAE;QAClC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,YAAY,GAAG,SAAS,aAAa,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG;YACR,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YACtC,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YACvC,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YACtC,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QAC1C;QACA,IAAI,CAAC,KAAK;IACd;IAEA,QAAQ;QACJ,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,QAAQ,GAAG,YAAY;YACxB,IAAI,CAAC,WAAW;QACpB,GAAG;IACP;IAEA,cAAc;QACV,MAAM,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI;QACnC,IAAI,QAAQ,GAAG;YACX,cAAc,IAAI,CAAC,QAAQ;YAC3B;QACJ;QAEA,MAAM,OAAO,KAAK,KAAK,CAAC,OAAQ;QAChC,MAAM,QAAQ,KAAK,KAAK,CAAC,AAAC,OAAQ,WAAyB;QAC3D,MAAM,OAAO,KAAK,KAAK,CAAC,AAAC,OAAQ,UAAoB;QACrD,MAAM,OAAO,KAAK,KAAK,CAAC,AAAC,OAAQ,QAAc;QAE/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG;QAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;IAC1C;IAEA,IAAI,KAAK,EAAE;QACP,OAAO,OAAO,OAAO,QAAQ,CAAC,GAAG;IACrC;AACJ;AAEA,IAAI,eAAe;IACf,UAAU;IACV,YAAY,IAAI,KAAK;AACzB","sources":["src/index.js"],"sourcesContent":["class CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n        this.selector = selector;\r\n        this.targetDate = targetDate;\r\n        this.timerElement = document.querySelector(selector);\r\n        this.refs = {\r\n            days: this.timerElement.querySelector('[data-value=\"days\"]'),\r\n            hours: this.timerElement.querySelector('[data-value=\"hours\"]'),\r\n            mins: this.timerElement.querySelector('[data-value=\"mins\"]'),\r\n            secs: this.timerElement.querySelector('[data-value=\"secs\"]'),\r\n        };\r\n        this.start();\r\n    }\r\n\r\n    start() {\r\n        this.updateTimer();\r\n        this.interval = setInterval(() => {\r\n            this.updateTimer();\r\n        }, 1000);\r\n    }\r\n\r\n    updateTimer() {\r\n        const time = this.targetDate - new Date();\r\n        if (time <= 0) {\r\n            clearInterval(this.interval);\r\n            return;\r\n        }\r\n\r\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n        const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n        this.refs.days.textContent = days;\r\n        this.refs.hours.textContent = this.pad(hours);\r\n        this.refs.mins.textContent = this.pad(mins);\r\n        this.refs.secs.textContent = this.pad(secs);\r\n    }\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n}\r\n\r\nnew CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jul 17, 2025'),\r\n});\r\n"],"names":[],"version":3,"file":"hw-han.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}