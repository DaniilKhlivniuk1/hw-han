{"mappings":"ACAA,MAAM,eACF,YAAY,CAAE,SAAA,CAAQ,CAAE,WAAA,CAAU,CAAE,CAAE,CACpC,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,YAAY,CAAG,SAAS,aAAa,CAAC,IAAI,CAAC,QAAQ,EACxD,IAAI,CAAC,IAAI,CAAG,CACV,KAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACtC,MAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,wBACvC,KAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACtC,KAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,sBACxC,EACA,IAAI,CAAC,KAAK,EACZ,CAEA,OAAQ,CACN,IAAI,CAAC,WAAW,GAChB,IAAI,CAAC,UAAU,CAAG,YAAY,IAAM,IAAI,CAAC,WAAW,GAAI,IAC1D,CAEA,aAAc,CACZ,IAAM,EAAO,IAAI,CAAC,UAAU,CAAG,IAAI,KACnC,GAAI,EAAO,EAAG,CACZ,cAAc,IAAI,CAAC,UAAU,EAC7B,MACF,CAEA,IAAM,EAAO,KAAK,KAAK,CAAC,EAAQ,OAC1B,EAAQ,KAAK,KAAK,CAAE,EAAQ,MAAyB,MACrD,EAAO,KAAK,KAAK,CAAE,EAAQ,KAAoB,KAC/C,EAAO,KAAK,KAAK,CAAE,EAAQ,IAAc,IAE/C,CAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAG,EAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAG,OAAO,GAAO,QAAQ,CAAC,EAAG,KACxD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAG,OAAO,GAAM,QAAQ,CAAC,EAAG,KACtD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAG,OAAO,GAAM,QAAQ,CAAC,EAAG,IACxD,CACF,CAEA,IAAI,eAAe,CACjB,SAAU,WACV,WAAY,IAAI,KAAK,eACvB","sources":["<anon>","src/index.js"],"sourcesContent":["class CountdownTimer {\n    constructor({ selector, targetDate }){\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.timerElement = document.querySelector(this.selector);\n        this.refs = {\n            days: this.timerElement.querySelector('[data-value=\"days\"]'),\n            hours: this.timerElement.querySelector('[data-value=\"hours\"]'),\n            mins: this.timerElement.querySelector('[data-value=\"mins\"]'),\n            secs: this.timerElement.querySelector('[data-value=\"secs\"]')\n        };\n        this.start();\n    }\n    start() {\n        this.updateTimer();\n        this.intervalId = setInterval(()=>this.updateTimer(), 1000);\n    }\n    updateTimer() {\n        const time = this.targetDate - new Date();\n        if (time < 0) {\n            clearInterval(this.intervalId);\n            return;\n        }\n        const days = Math.floor(time / 86400000);\n        const hours = Math.floor(time % 86400000 / 3600000);\n        const mins = Math.floor(time % 3600000 / 60000);\n        const secs = Math.floor(time % 60000 / 1000);\n        this.refs.days.textContent = days;\n        this.refs.hours.textContent = String(hours).padStart(2, '0');\n        this.refs.mins.textContent = String(mins).padStart(2, '0');\n        this.refs.secs.textContent = String(secs).padStart(2, '0');\n    }\n}\nnew CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2025')\n});\n\n//# sourceMappingURL=hw-han.1548d131.js.map\n","class CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n      this.selector = selector;\r\n      this.targetDate = targetDate;\r\n      this.timerElement = document.querySelector(this.selector);\r\n      this.refs = {\r\n        days: this.timerElement.querySelector('[data-value=\"days\"]'),\r\n        hours: this.timerElement.querySelector('[data-value=\"hours\"]'),\r\n        mins: this.timerElement.querySelector('[data-value=\"mins\"]'),\r\n        secs: this.timerElement.querySelector('[data-value=\"secs\"]')\r\n      };\r\n      this.start();\r\n    }\r\n  \r\n    start() {\r\n      this.updateTimer();\r\n      this.intervalId = setInterval(() => this.updateTimer(), 1000);\r\n    }\r\n  \r\n    updateTimer() {\r\n      const time = this.targetDate - new Date();\r\n      if (time < 0) {\r\n        clearInterval(this.intervalId);\r\n        return;\r\n      }\r\n      \r\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n      const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n      \r\n      this.refs.days.textContent = days;\r\n      this.refs.hours.textContent = String(hours).padStart(2, '0');\r\n      this.refs.mins.textContent = String(mins).padStart(2, '0');\r\n      this.refs.secs.textContent = String(secs).padStart(2, '0');\r\n    }\r\n  }\r\n  \r\n  new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jul 17, 2025'),\r\n  });\r\n  "],"names":["CountdownTimer","constructor","selector","targetDate","timerElement","document","querySelector","refs","days","hours","mins","secs","start","updateTimer","intervalId","setInterval","time","Date","clearInterval","Math","floor","textContent","String","padStart"],"version":3,"file":"hw-han.1548d131.js.map"}